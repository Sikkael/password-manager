{"version":3,"sources":["../../src/__tests__/SpecTransformer.test.ts"],"names":["describe","test","originalSpec","openapi","info","title","description","version","components","schemas","Schema","type","properties","TodoState","enum","TodoItemId","id","format","required","additionalProperties","TodoItem","label","dueDateMs","minimum","state","TodoItems","todoItems","items","$ref","TodoItemsGroupedByStatus","todo","inProgress","done","FortyTwo","paths","get","responses","operationId","content","schema","post","requestBody","put","parameters","in","name","t","SpecTransformer","transformedSpec","transform","mergeRefs","expect","toEqual","Schema_TodoState","Schema_TodoItem","Schema_TodoItems","Schema_TodoItemsGroupedByStatus","Schema_FortyTwo","Schema_TodoItem_id","Schema_TodoItem_label","Schema_TodoItem_dueDateMs","Schema_TodoItems_todoItems","Schema_TodoItemsGroupedByStatus_todo","Schema_TodoItemsGroupedByStatus_inProgress","Schema_TodoItemsGroupedByStatus_done"],"mappings":"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","sourcesContent":["import { SpecTransformer } from \"../SpecTransformer\";\n\ndescribe(`SpecTransformer`, () => {\n  test(`transform`, () => {\n    const originalSpec = {\n      openapi: `3.0.3`,\n      info: {\n        title: `Fastify Zod Test Server`,\n        description: `Test Server for Fastify Zod`,\n        version: `0.0.0`,\n      },\n      components: {\n        schemas: {\n          Schema: {\n            type: `object`,\n            properties: {\n              TodoState: {\n                type: `string`,\n                enum: [`todo`, `in progress`, `done`],\n              },\n              TodoItemId: {\n                type: `object`,\n                properties: {\n                  id: {\n                    type: `string`,\n                    format: `uuid`,\n                  },\n                },\n                required: [`id`],\n                additionalProperties: false,\n              },\n              TodoItem: {\n                type: `object`,\n                properties: {\n                  id: {\n                    type: `string`,\n                    format: `uuid`,\n                  },\n                  label: {\n                    type: `string`,\n                  },\n                  dueDateMs: {\n                    type: `integer`,\n                    minimum: 0,\n                  },\n                  state: {\n                    type: `string`,\n                    enum: [`todo`, `in progress`, `done`],\n                  },\n                },\n                required: [`id`, `label`, `state`],\n                additionalProperties: false,\n              },\n              TodoItems: {\n                type: `object`,\n                properties: {\n                  todoItems: {\n                    type: `array`,\n                    items: {\n                      $ref: `#/properties/TodoItem`,\n                    },\n                  },\n                },\n                required: [`todoItems`],\n                additionalProperties: false,\n              },\n              TodoItemsGroupedByStatus: {\n                type: `object`,\n                properties: {\n                  todo: {\n                    type: `array`,\n                    items: {\n                      $ref: `#/properties/TodoItem`,\n                    },\n                  },\n                  inProgress: {\n                    type: `array`,\n                    items: {\n                      $ref: `#/properties/TodoItem`,\n                    },\n                  },\n                  done: {\n                    type: `array`,\n                    items: {\n                      $ref: `#/properties/TodoItem`,\n                    },\n                  },\n                },\n                required: [`todo`, `inProgress`, `done`],\n                additionalProperties: false,\n              },\n              FortyTwo: {\n                type: `number`,\n                enum: [42],\n              },\n            },\n            required: [\n              `TodoState`,\n              `TodoItemId`,\n              `TodoItem`,\n              `TodoItems`,\n              `TodoItemsGroupedByStatus`,\n              `FortyTwo`,\n            ],\n            additionalProperties: false,\n          },\n        },\n      },\n      paths: {\n        \"/documentation_transformed/json\": {\n          get: {\n            responses: {\n              \"200\": {\n                description: `Default Response`,\n              },\n            },\n          },\n        },\n        \"/documentation_transformed/yaml\": {\n          get: {\n            responses: {\n              \"200\": {\n                description: `Default Response`,\n              },\n            },\n          },\n        },\n        \"/item\": {\n          get: {\n            operationId: `getTodoItems`,\n            responses: {\n              \"200\": {\n                description: `The list of Todo Items`,\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      $ref: `#/components/schemas/Schema/properties/TodoItems`,\n                      description: `The list of Todo Items`,\n                    },\n                  },\n                },\n              },\n            },\n          },\n          post: {\n            operationId: `postTodoItem`,\n            requestBody: {\n              content: {\n                \"application/json\": {\n                  schema: {\n                    $ref: `#/components/schemas/Schema/properties/TodoItem`,\n                  },\n                },\n              },\n            },\n            responses: {\n              \"200\": {\n                description: `Default Response`,\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      $ref: `#/components/schemas/Schema/properties/TodoItems`,\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        \"/item/grouped-by-status\": {\n          get: {\n            operationId: `getTodoItemsGroupedByStatus`,\n            responses: {\n              \"200\": {\n                description: `Default Response`,\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      $ref: `#/components/schemas/Schema/properties/TodoItemsGroupedByStatus`,\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        \"/item/{id}\": {\n          put: {\n            operationId: `putTodoItem`,\n            requestBody: {\n              content: {\n                \"application/json\": {\n                  schema: {\n                    $ref: `#/components/schemas/Schema/properties/TodoItem`,\n                  },\n                },\n              },\n            },\n            parameters: [\n              {\n                in: `path`,\n                name: `id`,\n                required: true,\n                schema: {\n                  type: `string`,\n                  format: `uuid`,\n                },\n              },\n            ],\n            responses: {\n              \"200\": {\n                description: `Default Response`,\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      $ref: `#/components/schemas/Schema/properties/TodoItem`,\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        \"/42\": {\n          get: {\n            operationId: `getFortyTwo`,\n            responses: {\n              \"200\": {\n                description: `Default Response`,\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      $ref: `#/components/schemas/Schema/properties/FortyTwo`,\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    };\n\n    const t = new SpecTransformer(originalSpec);\n\n    const transformedSpec = t.transform({\n      mergeRefs: [{ $ref: `Schema#/properties/TodoState` }],\n    });\n\n    expect(transformedSpec).toEqual({\n      openapi: `3.0.3`,\n      info: {\n        title: `Fastify Zod Test Server`,\n        description: `Test Server for Fastify Zod`,\n        version: `0.0.0`,\n      },\n      components: {\n        schemas: {\n          Schema_TodoState: {\n            type: `string`,\n            enum: [`todo`, `in progress`, `done`],\n          },\n          Schema_TodoItem: {\n            type: `object`,\n            properties: {\n              id: {\n                $ref: `#/components/schemas/Schema_TodoItem_id`,\n              },\n              label: {\n                $ref: `#/components/schemas/Schema_TodoItem_label`,\n              },\n              dueDateMs: {\n                $ref: `#/components/schemas/Schema_TodoItem_dueDateMs`,\n              },\n              state: {\n                $ref: `#/components/schemas/Schema_TodoState`,\n              },\n            },\n            required: [`id`, `label`, `state`],\n            additionalProperties: false,\n          },\n          Schema_TodoItems: {\n            type: `object`,\n            properties: {\n              todoItems: {\n                $ref: `#/components/schemas/Schema_TodoItems_todoItems`,\n              },\n            },\n            required: [`todoItems`],\n            additionalProperties: false,\n          },\n          Schema_TodoItemsGroupedByStatus: {\n            type: `object`,\n            properties: {\n              todo: {\n                $ref: `#/components/schemas/Schema_TodoItemsGroupedByStatus_todo`,\n              },\n              inProgress: {\n                $ref: `#/components/schemas/Schema_TodoItemsGroupedByStatus_inProgress`,\n              },\n              done: {\n                $ref: `#/components/schemas/Schema_TodoItemsGroupedByStatus_done`,\n              },\n            },\n            required: [`todo`, `inProgress`, `done`],\n            additionalProperties: false,\n          },\n          Schema_FortyTwo: {\n            type: `number`,\n            enum: [42],\n          },\n          Schema_TodoItem_id: {\n            type: `string`,\n            format: `uuid`,\n          },\n          Schema_TodoItem_label: {\n            type: `string`,\n          },\n          Schema_TodoItem_dueDateMs: {\n            type: `integer`,\n            minimum: 0,\n          },\n          Schema_TodoItems_todoItems: {\n            type: `array`,\n            items: {\n              $ref: `#/components/schemas/Schema_TodoItem`,\n            },\n          },\n          Schema_TodoItemsGroupedByStatus_todo: {\n            type: `array`,\n            items: {\n              $ref: `#/components/schemas/Schema_TodoItem`,\n            },\n          },\n          Schema_TodoItemsGroupedByStatus_inProgress: {\n            type: `array`,\n            items: {\n              $ref: `#/components/schemas/Schema_TodoItem`,\n            },\n          },\n          Schema_TodoItemsGroupedByStatus_done: {\n            type: `array`,\n            items: {\n              $ref: `#/components/schemas/Schema_TodoItem`,\n            },\n          },\n        },\n      },\n      paths: {\n        \"/documentation_transformed/json\": {\n          get: {\n            responses: {\n              \"200\": {\n                description: `Default Response`,\n              },\n            },\n          },\n        },\n        \"/documentation_transformed/yaml\": {\n          get: {\n            responses: {\n              \"200\": {\n                description: `Default Response`,\n              },\n            },\n          },\n        },\n        \"/item\": {\n          get: {\n            operationId: `getTodoItems`,\n            responses: {\n              \"200\": {\n                description: `The list of Todo Items`,\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      $ref: `#/components/schemas/Schema_TodoItems`,\n                      description: `The list of Todo Items`,\n                    },\n                  },\n                },\n              },\n            },\n          },\n          post: {\n            operationId: `postTodoItem`,\n            requestBody: {\n              content: {\n                \"application/json\": {\n                  schema: {\n                    $ref: `#/components/schemas/Schema_TodoItem`,\n                  },\n                },\n              },\n            },\n            responses: {\n              \"200\": {\n                description: `Default Response`,\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      $ref: `#/components/schemas/Schema_TodoItems`,\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        \"/item/grouped-by-status\": {\n          get: {\n            operationId: `getTodoItemsGroupedByStatus`,\n            responses: {\n              \"200\": {\n                description: `Default Response`,\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      $ref: `#/components/schemas/Schema_TodoItemsGroupedByStatus`,\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        \"/item/{id}\": {\n          put: {\n            operationId: `putTodoItem`,\n            requestBody: {\n              content: {\n                \"application/json\": {\n                  schema: {\n                    $ref: `#/components/schemas/Schema_TodoItem`,\n                  },\n                },\n              },\n            },\n            parameters: [\n              {\n                in: `path`,\n                name: `id`,\n                required: true,\n                schema: {\n                  type: `string`,\n                  format: `uuid`,\n                },\n              },\n            ],\n            responses: {\n              \"200\": {\n                description: `Default Response`,\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      $ref: `#/components/schemas/Schema_TodoItem`,\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        \"/42\": {\n          get: {\n            operationId: `getFortyTwo`,\n            responses: {\n              \"200\": {\n                description: `Default Response`,\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      $ref: `#/components/schemas/Schema_FortyTwo`,\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    });\n  });\n});\n"],"file":"SpecTransformer.test.js"}