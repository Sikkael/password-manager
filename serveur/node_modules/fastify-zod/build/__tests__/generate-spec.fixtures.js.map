{"version":3,"sources":["../../src/__tests__/generate-spec.fixtures.ts"],"names":["main","f","jsonSchemas","models","swaggerOptions","openApiOptions","transformSpec","options","originalSpec","inject","method","url","then","res","json","__dirname","JSON","stringify","encoding","transformedSpecJson","body","transformedSpecYaml","catch","error","console","process","exit"],"mappings":";;AAAA;;AACA;;AAEA;;AAEA;;AACA;;AAEA,MAAMA,IAAI,GAAG,YAA2B;AACtC,QAAMC,CAAC,GAAG,8BACR,EADQ,EAER;AACEC,IAAAA,WAAW,EAAE,wBAAiBC,cAAjB,EAAyB,EAAzB,CADf;AAEEC,IAAAA,cAAc,EAAE,EACd,GAAGC,sBADW;AAEdC,MAAAA,aAAa,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAFD;AAFlB,GAFQ,CAAV;AAWA,QAAMC,YAAY,GAAG,MAAMP,CAAC,CACzBQ,MADwB,CACjB;AACNC,IAAAA,MAAM,EAAG,KADH;AAENC,IAAAA,GAAG,EAAG;AAFA,GADiB,EAKxBC,IALwB,CAKlBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EALU,CAA3B;AAOA,QAAM,yBACJ,gBAAKC,SAAL,EAAiB,IAAjB,EAAuB,IAAvB,EAA6B,uBAA7B,CADI,EAEJC,IAAI,CAACC,SAAL,CAAeT,YAAf,EAA6B,IAA7B,EAAmC,CAAnC,CAFI,EAGJ;AAAEU,IAAAA,QAAQ,EAAG;AAAb,GAHI,CAAN;AAMA,QAAMC,mBAAmB,GAAG,MAAMlB,CAAC,CAChCQ,MAD+B,CACxB;AACNC,IAAAA,MAAM,EAAG,KADH;AAENC,IAAAA,GAAG,EAAG;AAFA,GADwB,EAK/BC,IAL+B,CAKzBC,GAAD,IAASA,GAAG,CAACO,IALa,CAAlC;AAOA,QAAM,yBACJ,gBAAKL,SAAL,EAAiB,IAAjB,EAAuB,IAAvB,EAA6B,0BAA7B,CADI,EAEJI,mBAFI,EAGJ;AAAED,IAAAA,QAAQ,EAAG;AAAb,GAHI,CAAN;AAMA,QAAMG,mBAAmB,GAAG,MAAMpB,CAAC,CAChCQ,MAD+B,CACxB;AACNC,IAAAA,MAAM,EAAG,KADH;AAENC,IAAAA,GAAG,EAAG;AAFA,GADwB,EAK/BC,IAL+B,CAKzBC,GAAD,IAASA,GAAG,CAACO,IALa,CAAlC;AAOA,QAAM,yBACJ,gBAAKL,SAAL,EAAiB,IAAjB,EAAuB,IAAvB,EAA6B,yBAA7B,CADI,EAEJM,mBAFI,EAGJ;AAAEH,IAAAA,QAAQ,EAAG;AAAb,GAHI,CAAN;AAKD,CAlDD;;AAoDAlB,IAAI,GAAGsB,KAAP,CAAcC,KAAD,IAAW;AACtBC,EAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAE,EAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD,CAHD","sourcesContent":["import { writeFile } from \"fs/promises\";\nimport { join } from \"path\";\n\nimport { buildJsonSchemas } from \"..\";\n\nimport { models } from \"./models.fixtures\";\nimport { createTestServer, openApiOptions } from \"./server.fixtures\";\n\nconst main = async (): Promise<void> => {\n  const f = createTestServer(\n    {},\n    {\n      jsonSchemas: buildJsonSchemas(models, {}),\n      swaggerOptions: {\n        ...openApiOptions,\n        transformSpec: { options: {} },\n      },\n    },\n  );\n\n  const originalSpec = await f\n    .inject({\n      method: `get`,\n      url: `/documentation/json`,\n    })\n    .then((res) => res.json());\n\n  await writeFile(\n    join(__dirname, `..`, `..`, `openapi.original.json`),\n    JSON.stringify(originalSpec, null, 2),\n    { encoding: `utf-8` },\n  );\n\n  const transformedSpecJson = await f\n    .inject({\n      method: `get`,\n      url: `/documentation_transformed/json`,\n    })\n    .then((res) => res.body);\n\n  await writeFile(\n    join(__dirname, `..`, `..`, `openapi.transformed.json`),\n    transformedSpecJson,\n    { encoding: `utf-8` },\n  );\n\n  const transformedSpecYaml = await f\n    .inject({\n      method: `get`,\n      url: `/documentation_transformed/yaml`,\n    })\n    .then((res) => res.body);\n\n  await writeFile(\n    join(__dirname, `..`, `..`, `openapi.transformed.yml`),\n    transformedSpecYaml,\n    { encoding: `utf-8` },\n  );\n};\n\nmain().catch((error) => {\n  console.error(error);\n  process.exit(1);\n});\n"],"file":"generate-spec.fixtures.js"}