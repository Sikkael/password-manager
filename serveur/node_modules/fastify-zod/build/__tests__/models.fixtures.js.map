{"version":3,"sources":["../../src/__tests__/models.fixtures.ts"],"names":["TodoItemId","z","object","id","string","uuid","TodoStateEnum","TodoState","nativeEnum","TodoItem","extend","label","dueDateMs","number","int","nonnegative","optional","state","TodoItems","todoItems","array","TodoItemsGroupedByStatus","todo","inProgress","done","FortyTwo","literal","models"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAEC,MAAF,CAAS;AAC1BC,EAAAA,EAAE,EAAEF,OAAEG,MAAF,GAAWC,IAAX;AADsB,CAAT,CAAnB;;IAKKC,a;;WAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a;;AAML,MAAMC,SAAS,GAAGN,OAAEO,UAAF,CAAaF,aAAb,CAAlB;;AAEA,MAAMG,QAAQ,GAAGT,UAAU,CAACU,MAAX,CAAkB;AACjCC,EAAAA,KAAK,EAAEV,OAAEG,MAAF,EAD0B;AAEjCQ,EAAAA,SAAS,EAAEX,OAAEY,MAAF,GAAWC,GAAX,GAAiBC,WAAjB,GAA+BC,QAA/B,EAFsB;AAGjCC,EAAAA,KAAK,EAAEV;AAH0B,CAAlB,CAAjB;;AAQA,MAAMW,SAAS,GAAGjB,OAAEC,MAAF,CAAS;AACzBiB,EAAAA,SAAS,EAAElB,OAAEmB,KAAF,CAAQX,QAAR;AADc,CAAT,CAAlB;;AAKA,MAAMY,wBAAwB,GAAGpB,OAAEC,MAAF,CAAS;AACxCoB,EAAAA,IAAI,EAAErB,OAAEmB,KAAF,CAAQX,QAAR,CADkC;AAExCc,EAAAA,UAAU,EAAEtB,OAAEmB,KAAF,CAAQX,QAAR,CAF4B;AAGxCe,EAAAA,IAAI,EAAEvB,OAAEmB,KAAF,CAAQX,QAAR;AAHkC,CAAT,CAAjC;;AAQA,MAAMgB,QAAQ,GAAGxB,OAAEyB,OAAF,CAAU,EAAV,CAAjB;;AAGO,MAAMC,MAAM,GAAG;AACpBpB,EAAAA,SADoB;AAEpBP,EAAAA,UAFoB;AAGpBS,EAAAA,QAHoB;AAIpBS,EAAAA,SAJoB;AAKpBG,EAAAA,wBALoB;AAMpBI,EAAAA;AANoB,CAAf","sourcesContent":["import { z } from \"zod\";\n\nconst TodoItemId = z.object({\n  id: z.string().uuid(),\n});\nexport type TodoItemId = z.infer<typeof TodoItemId>;\n\nenum TodoStateEnum {\n  Todo = `todo`,\n  InProgress = `in progress`,\n  Done = `done`,\n}\n\nconst TodoState = z.nativeEnum(TodoStateEnum);\n\nconst TodoItem = TodoItemId.extend({\n  label: z.string(),\n  dueDateMs: z.number().int().nonnegative().optional(),\n  state: TodoState,\n});\n\nexport type TodoItem = z.infer<typeof TodoItem>;\n\nconst TodoItems = z.object({\n  todoItems: z.array(TodoItem),\n});\nexport type TodoItems = z.infer<typeof TodoItems>;\n\nconst TodoItemsGroupedByStatus = z.object({\n  todo: z.array(TodoItem),\n  inProgress: z.array(TodoItem),\n  done: z.array(TodoItem),\n});\n\nexport type TodoItemsGroupedByStatus = z.infer<typeof TodoItemsGroupedByStatus>;\n\nconst FortyTwo = z.literal(42);\nexport type FortyTwo = z.infer<typeof FortyTwo>;\n\nexport const models = {\n  TodoState,\n  TodoItemId,\n  TodoItem,\n  TodoItems,\n  TodoItemsGroupedByStatus,\n  FortyTwo,\n};\n"],"file":"models.fixtures.js"}