{"version":3,"sources":["../../src/__tests__/server.fixtures.ts"],"names":["swaggerOptions","routePrefix","swagger","info","title","description","version","staticCSP","exposeRoute","openApiOptions","openapi","createTestServer","fastifyOptions","registerOptions","f","state","todoItems","zod","get","operationId","reply","key","done","filter","item","inProgress","todo","post","body","nextItem","some","prevItem","id","BadRequest","put","params","NotFound","map"],"mappings":"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","sourcesContent":["import fastify, { FastifyInstance, FastifyServerOptions } from \"fastify\";\nimport { BadRequest, NotFound } from \"http-errors\";\n\nimport { register } from \"..\";\nimport { FastifyZod, RegisterOptions } from \"../FastifyZod\";\n\nimport { models, TodoItems } from \"./models.fixtures\";\n\n// eslint-disable-next-line quotes\ndeclare module \"fastify\" {\n  interface FastifyInstance {\n    readonly zod: FastifyZod<typeof models>;\n  }\n}\n\nexport const swaggerOptions: RegisterOptions<typeof models>[`swaggerOptions`] =\n  {\n    routePrefix: `/swagger`,\n    swagger: {\n      info: {\n        title: `Fastify Zod Test Server`,\n        description: `Test Server for Fastify Zod`,\n        version: `0.0.0`,\n      },\n    },\n    staticCSP: true,\n    exposeRoute: true,\n  };\n\nexport const openApiOptions: RegisterOptions<typeof models>[`swaggerOptions`] =\n  {\n    openapi: {\n      info: {\n        title: `Fastify Zod Test Server`,\n        description: `Test Server for Fastify Zod`,\n        version: `0.0.0`,\n      },\n    },\n    staticCSP: true,\n    exposeRoute: true,\n  };\n\nexport const createTestServer = (\n  fastifyOptions: FastifyServerOptions,\n  registerOptions: RegisterOptions<typeof models>,\n): FastifyInstance => {\n  const f = fastify(fastifyOptions);\n\n  register(f, registerOptions);\n\n  const state: TodoItems = {\n    todoItems: [],\n  };\n\n  f.zod.get(\n    `/item`,\n    {\n      operationId: `getTodoItems`,\n      reply: {\n        description: `The list of Todo Items`,\n        key: `TodoItems`,\n      },\n    },\n    async () => state,\n  );\n\n  f.zod.get(\n    `/item/grouped-by-status`,\n    {\n      operationId: `getTodoItemsGroupedByStatus`,\n      reply: `TodoItemsGroupedByStatus`,\n    },\n    async () => ({\n      done: state.todoItems.filter((item) => item.state === `done`),\n      inProgress: state.todoItems.filter(\n        (item) => item.state === `in progress`,\n      ),\n      todo: state.todoItems.filter((item) => item.state === `todo`),\n    }),\n  );\n\n  f.zod.post(\n    `/item`,\n    {\n      operationId: `postTodoItem`,\n      body: `TodoItem`,\n      reply: `TodoItems`,\n    },\n    async ({ body: nextItem }) => {\n      if (state.todoItems.some((prevItem) => prevItem.id === nextItem.id)) {\n        throw new BadRequest(`item already exists`);\n      }\n      state.todoItems = [...state.todoItems, nextItem];\n      return state;\n    },\n  );\n\n  f.zod.put(\n    `/item/:id`,\n    {\n      operationId: `putTodoItem`,\n      body: `TodoItem`,\n      params: `TodoItemId`,\n      reply: `TodoItem`,\n    },\n    async ({ params: { id }, body: nextItem }) => {\n      if (!state.todoItems.some((prevItem) => prevItem.id === id)) {\n        throw new NotFound(`no such item`);\n      }\n      state.todoItems = state.todoItems.map((prevItem) =>\n        prevItem.id === id ? nextItem : prevItem,\n      );\n      return nextItem;\n    },\n  );\n\n  f.zod.get(\n    `/42`,\n    { operationId: `getFortyTwo`, reply: `FortyTwo` },\n    async () => 42,\n  );\n\n  return f;\n};\n"],"file":"server.fixtures.js"}